@startuml
skinparam class {
    BackgroundColor FloralWhite
    BorderColor Black
}

package user{
  class Registered_Commuter {
    -iGoCard transitCard
    +iGoCard: getiGoCard()
  }
  
  class User{
    -int userId
    -String fname
    -String lname
    -String email
    -int contact
    -String category
    +User: getUserInformation()

  }
  
  class Unregistered_Commuter{
    
  }
  
  class Conductor{
    -String schedule
    -String licenseNumber
    -String licenseType
  }
}

package business{

  
  class Ticket {
    -int ticketNumber
    -Date expirationDate
    +void: addFare(Fare)
  }
  
  class Fare {
    -String description
    -float amount
    -String currency
    +Fare: addNewFare(Fare)
  }
  
    class iGoCard {
    -String cardNumber
    -float balance
    +void: recharge(Fare)
  }
  
}

package machine {
  
  class TVM {
    -int id
    -String location
  }





}

package finance{

  class BillingProcessor{
    +Invoice: createInvoice(int, Transaction, timestamp)
    +void: validate()
    +void : reject()
  }
  class Transaction {
    -int transactionId
    -Date transactionDate
    -Payment payment_details
    -String status
  }
  
  class PurchaseView{
    +View purchase_view()
    +void : displayPaymentInformation(Payment)
    +void : displayInvoice(Invoice)
  }

  class Payment {
    -User user
    -Fare fare
    -PaymentPartner partner
    -String type
    +PaymentPartner: getPaymentPartner()
  }

  class TransactionController{
    -PurchaseView view
    +Payment : createPaymentDetails(User, Fare, PaymentPartner, String)
    +Transaction : createTransaction(int, Date, Payment) 
  }


  
  class Invoice{
    -int invoiceId
    -Transaction transaction
    -Timestamp transactionDate
    +Transaction: getTransaction()
  }
  

  
  class PaymentPartner {
    -String name
    -String address
    -Date startedAt
    -Contract contract
    +void : validatePaymentDetails(Payment)
    +void : validate()
    +void : reject()
  }
  

}

User <|-- Conductor
User <|-- Registered_Commuter
Ticket "0...*" <-- "1" Fare
iGoCard "0...*" <-- "1" Fare
Transaction "0...*" -- "1" iGoCard: Belongs to >
Transaction "0...*" -- "1" Ticket: Belongs to >
Transaction "1..*" - "1..*" Payment
TVM --> User
PaymentPartner --> "1..*" Payment : Manages
iGoCard "1" --o "1" Registered_Commuter
TransactionController --> Transaction: Creates
TransactionController --> Payment: Creates
TransactionController --> BillingProcessor
PurchaseView --> TransactionController
BillingProcessor --> Invoice: Creates
@enduml
